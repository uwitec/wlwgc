<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       default-lazy-init="true" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <bean
            class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

    <context:component-scan base-package="com.dao">
        <context:exclude-filter type="annotation"   expression="org.springframework.stereotype.Controller" />
    </context:component-scan>


    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>



    <!--业务库数据源配置-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"   destroy-method="close">
        <property name="driverClass" value="${db.jdbc.driverClass}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialPoolSize" value="${db.jdbc.initialPoolSize}" />
        <property name="minPoolSize" value="${db.jdbc.minPoolSize}" />
        <property name="maxPoolSize" value="${db.jdbc.maxPoolSize}" />
    </bean>



    <!-- 业务库MyBatis Brgin -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.dao"></property>
        <property name="typeAliasesSuperType" value="com.dao.base.domain.Entity"></property>
        <property name="mapperLocations" value="classpath:/mappings/*.xml"></property>
        <property name="configLocation" value="classpath:/mybatis/mybatis.xml"></property>
    </bean>



    <!-- 扫描basePackage下所有以@Repository注解的接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.dao.mapper" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
    </bean>


    <!--Mybatis事务-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <qualifier value="tx" />
    </bean>


    <!-- 全注解方式   需加上@Transactional -->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <!-- 事务控制的业务方法配 -->
    <!--
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="page*" read-only="true" />
            <tx:method name="list*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    -->
    <!-- 事务控制拦截 -->
    <!--
    <aop:config proxy-target-class="true">
        <aop:advisor pointcut="execution(* org.zhuc..*.service..*Service.*(..))"
            advice-ref="txAdvice" />
    </aop:config>
    -->

    <!-- =================================================================== -->










    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/mybatis/myjdbc.properties</value>
            </list>
        </property>
    </bean>



</beans>